package minigames.client.krumgame;

import java.util.ArrayList;
import java.awt.geom.Point2D;

/**
 * Class representing the state of a KrumPlayer at one instant
 */

public class KrumPlayerState {
    double hp;
    double xpos;
    double ypos;
    double xvel;
    double yvel;     
    boolean leftKeyDown;
    boolean rightKeyDown;
    boolean upArrowKeyDown;
    boolean downArrowKeyDown;
    boolean firing;
    boolean firingGrenade;
    long fireStart;
    long fireGrenadeStart;
    int grenadeSeconds;    
    int flashFramesLeft;
    boolean airborne;
    boolean jumping;
    long jumpStart;
    boolean facingRight;
    boolean walking;
    boolean walkedOffEdge;
    long shotPower;
    boolean shootNextFrame;
    long grenadePower;
    boolean grenadeNextFrame;
    boolean detachRopeNextFrame;
    boolean shootRopeNextFrame;
    long jumpPower;
    boolean jumpNextFrame;
    double grenadeAimAngle;
    double shootAimAngle;
    double ropeAimAngle;
    int jumpType;
    boolean firstJumpFrame = false;
    boolean deferredLanding;
    long lastShotTime;
    long lastGrenadeShotTime;
    boolean shootingRope;
    boolean onRope;
    ArrayList<Point2D.Double> ropeAttachmentPoints;
    double ropeLength;
    double ropeAngleRadians;
    double onRopeSpeed;
    boolean wasOnRope;
    boolean leftKeyDownNextFrame;
    boolean rightKeyDownNextFrame;
    boolean enterKeyDownNextFrame;
    ArrayList<Double> ropeSegmentLengths;
    KrumProjectile projectile;
    KrumGrenade grenade;
    KrumJoey joey;
    boolean dead;
    boolean canShootRope;
    boolean firstLanding;    
    int spriteIndex;
    KrumPlayerState(KrumPlayer p) {
        this.hp = p.hp;
        this.xpos = p.xpos;
        this.ypos = p.ypos;
        this.xvel = p.xvel;
        this.yvel = p.yvel;
        this.leftKeyDown = p.leftKeyDown;
        this.rightKeyDown = p.rightKeyDown;
        this.upArrowKeyDown = p.upArrowKeyDown;
        this.downArrowKeyDown = p.downArrowKeyDown;
        this.firing = p.firing;
        this.firingGrenade = p.firingGrenade;
        this.fireStart = p.fireStart;
        this.fireGrenadeStart = p.fireGrenadeStart;
        this.grenadeSeconds = p.grenadeSeconds;
        this.flashFramesLeft = p.flashFramesLeft;
        this.airborne = p.airborne;
        this.jumping = p.jumping;
        this.jumpStart = p.jumpStart;
        this.facingRight = p.facingRight;
        this.walking = p.walking;
        this.walkedOffEdge = p.walkedOffEdge;
        this.jumpType = p.jumpType;
        this.firstJumpFrame = p.firstJumpFrame;
        this.deferredLanding = p.deferredLanding;
        this.shootingRope = p.shootingRope;
        this.onRope = p.onRope;
        this.ropeAttachmentPoints = new ArrayList<Point2D.Double>(p.ropeAttachmentPoints);
        this.ropeLength = p.ropeLength;
        this.ropeAngleRadians = p.ropeAngleRadians;
        this.onRopeSpeed = p.onRopeSpeed;
        this.wasOnRope = p.wasOnRope;
        this.shotPower = p.shotPower;
        this.shootNextFrame = p.shootNextFrame;
        this.grenadePower = p.grenadePower;
        this.grenadeNextFrame = p.grenadeNextFrame;
        this.detachRopeNextFrame = p.detachRopeNextFrame;
        this.shootRopeNextFrame = p.shootRopeNextFrame;
        this.jumpPower = p.jumpPower;
        this.jumpNextFrame = p.jumpNextFrame;
        this.grenadeAimAngle = p.grenadeAimAngle;
        this.shootAimAngle = p.shootAimAngle;
        this.ropeAimAngle = p.ropeAimAngle;
        this.ropeSegmentLengths = new ArrayList<Double>(p.ropeSegmentLengths);
        this.facingRight = p.facingRight;
        this.projectile = p.projectile;
        this.grenade = p.grenade;
        this.joey = p.joey;
        this.dead = p.dead;
        this.canShootRope = p.canShootRope;
        this.firstLanding = p.firstLanding;
        this.spriteIndex = p.spriteIndex;
    }
}
